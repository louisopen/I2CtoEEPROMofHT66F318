; Generated by holtek-gcc v3.19, Sun Dec 06 00:12:18 2020
; 
; Configuration:
;       without long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [1]
acc equ [5]
bp equ [4]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
intc equ [11]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @HCCINIT, @HCCINIT0

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___status equ [10]
public _main
#pragma debug scope 2 1
#line 20 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
IFDEF WITH_DEFAULT_STARTUP
extern _main_initial0:near
extern _main_startup:near
ENDIF

ROMBANK 0 @start
@start .section com_l 'code'
_main_startup1:
@start .section com_e 'code'
	jmp _main

_main .section 'code'
_main proc
#line 21 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	snz [10].5
	jmp _L2
#line 21 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	sz [10].4
	jmp _L3
_L2:
#line 23 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _Ram_Init
#line 24 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _PowerOn_Init
_L3:
#line 29 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _WDT_ResetInit
#line 33 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,0
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[0],a
#line 34 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,1
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[1],a
#line 35 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,2
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[2],a
#line 36 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,3
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[3],a
#line 37 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,4
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[4],a
#line 38 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,5
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[5],a
#line 39 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,6
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[6],a
#line 40 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	mov a,7
	call _Read_EEPROM
	mov ra,a
	mov a,ra
	mov _tx_iic[7],a
_L5:
#line 44 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
;# 44 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c" 1
	clr wdt
#line 46 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _i2c_manage
#line 47 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	snz _system_flag[0].2
	jmp _L6
#line 49 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _ReadyToHalt
	jmp _L5
_L6:
#line 53 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _Task_500ms
#line 54 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
	call _Key_Scan
	jmp _L5
	jmp $
_main endp

@dummy proc
	call _main
@dummy endp

#line 54 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
#pragma debug scope 1 1
#pragma debug struct_begin 42 "__status_bits"
#pragma debug field 21 8 0 1 "__c" ;0,1
#pragma debug field 21 8 0 1 "__ac" ;1,1
#pragma debug field 21 8 0 1 "__z" ;2,1
#pragma debug field 21 8 0 1 "__ov" ;3,1
#pragma debug field 21 8 0 1 "__pdf" ;4,1
#pragma debug field 21 8 0 1 "__to" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 43 ""
#pragma debug field 2 42 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 43 1 ___status "__status" 1

; output external variables
extern _system_flag:byte
extern _tx_iic:byte
#line 20 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoEEPROMofHT66F318\I2CtoEEPROM\Main.c"
@code .section at 0 'code'
	jmp _main_startup1

extern _Ram_Init:near
extern _PowerOn_Init:near
extern _WDT_ResetInit:near
extern _Read_EEPROM:near
extern _i2c_manage:near
extern _ReadyToHalt:near
extern _Task_500ms:near
extern _Key_Scan:near

; 
; Generated by holtek-gcc v3.19, Sun Dec 06 00:12:18 2020
; Rebuild 718
; end of file
